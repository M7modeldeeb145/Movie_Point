@model Movie_Point.ViewModel.UserLoginVM

@{
    ViewData["Title"] = "Login";
}

<h1>Login</h1>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Login">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="UserName" class="control-label"></label>
                <input asp-for="UserName" class="form-control" />
                <span asp-validation-for="UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Password" class="control-label"></label>
                <input asp-for="Password" class="form-control" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="RememberMe" /> @Html.DisplayNameFor(model => model.RememberMe)
                </label>
            </div>
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <!-- Login button aligned to the left -->
                    <input type="submit" value="Login" class="btn btn-primary" />
                </div>
                <div>
                    <!-- Create New Account link aligned to the right -->
                    <a class="btn btn-outline-success" asp-action="Registeration" asp-controller="Account">Create New Account</a>
                </div>
            </div>
        </form>
    </div>
</div>
<div>
        <a asp-action="Index" class="btn btn-outline-dark">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
